#!/bin/sh
set -e

# Control a cyber-dojo web server.
# The aim is for all commands to forward to a cyber-dojo commander container.
# A few have to be handled locally.

docker_version=$(docker --version | awk '{print $3}' | sed '$s/.$//')
cyber_dojo_commander=cyberdojo/commander:${docker_version}

exit_if_docker_not_installed() {
  hash docker 2> /dev/null
  if [ $? != 0 ]; then
    echo
    echo 'docker is not installed'
    echo 'See http://blog.cyber-dojo.org/2016/08/running-your-own-cyber-dojo-web-server.html'
    exit 1
  fi
}

delegate_to_commander() {
  docker run \
    --rm \
    --user=root \
    --volume=/var/run/docker.sock:/var/run/docker.sock \
    ${cyber_dojo_commander} \
    /app/cyber-dojo.sh $*
}

if_sh_handle_locally_and_exit() {
  # TODO: if cyber-dojo-web is not running echo diagnostic
  if [ "$*" = "sh" ]; then
    # TODO: allow shelling into any container web/commander/differ/storer/runner?
    docker exec --interactive --tty cyber-dojo-web sh
    exit
  fi
}

if_update_handle_locally_and_exit() {
  if [ "$*" = "update" ]; then
    docker pull ${cyber_dojo_commander} # update commander image
    delegate_to_commander $*            # update other images
    # replace myself
    # https://bani.com.br/2013/04/shell-script-that-updates-itself/
    local cid=$(docker create ${cyber_dojo_commander})
    local new_me=/tmp/cyber-dojo.new
    docker cp ${cid}:/cyber-dojo ${new_me}
    docker rm ${cid} > /dev/null
    chmod +x ${new_me}
    cp ${new_me} $0
    rm ${new_me}
    exit
  fi
}

exit_if_docker_not_installed

if_sh_handle_locally_and_exit $*
if_update_handle_locally_and_exit $*
delegate_to_commander $*
