#!/bin/sh

# Minimal script file (without a .sh extension) to control a cyber-dojo web server.
# The aim is for most commands to be forwarded to the cyber-dojo commander image.
# The commands this script has to handle are
#
# 1. update
# 2. sh
# 3. start-point create --dir=DIR

os="$(uname -s)"

if [ "$(whoami)" != 'root' ] && [ "${os}" != 'Darwin' ]; then
  echo 'On Linux this must be run as root'
  exit
fi

exit_if_not_installed() {
  hash ${1} 2> /dev/null
  if [ $? != 0 ]; then
    echo
    echo "${1} is not installed"
    echo 'See http://blog.cyber-dojo.org/2016/08/running-your-own-cyber-dojo-web-server.html'
    exit 1
  fi
}

exit_if_not_installed 'docker'
if [ "${os}" = 'Darwin' ]; then
  exit_if_not_installed 'docker-machine'
fi

# - - - - - - - - - - - - - - - - - - - - - - -
# cyber-dojo images are docker version sensitive.
#    docker --version  -->  Docker version 1.11.2, build 5604cbe
#    awk '{print $3}'  -->  1.11.2,           (third field)
#    sed '$s/.$//'     -->  1.11.2            (lose last comma)

cyber_dojo_hub=cyberdojo
docker_version=$(docker --version | awk '{print $3}' | sed '$s/.$//')
cyber_dojo_commander_server=${cyber_dojo_hub}/commander:${docker_version}

delegate() {
  docker run \
    --rm \
    --user=root \
    --volume=/var/run/docker.sock:/var/run/docker.sock \
    ${cyber_dojo_commander_server} \
    /app/cyber-dojo.sh $*
}

if [ "$*" = "sh" ]; then
  # TODO: allow shelling into any container web/commander/differ/storer/runner?
  docker exec --interactive --tty cyber-dojo-web sh
  exit
fi

if [ "$*" = "update" ]; then
  # update commander image
  docker pull ${cyber_dojo_commander_server}
  delegate $*   # this will update all other images
  # TODO: extract new cyber-dojo script from image
  exit
fi

# if start-point create --dir=DIR NAME
#   check volume named NAME does not already exist
#   create a volume NAME from DIR
# fi

delegate $*
